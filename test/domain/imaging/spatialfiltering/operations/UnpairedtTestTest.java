/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domain.imaging.spatialfiltering.operations;

import domain.imaging.spatialfiltering.Kernel;
import domain.imaging.spatialfiltering.NonLinearSpatialFilter;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author Diego Garibay-Pulido 2016
 */
public class UnpairedtTestTest {
    
    public UnpairedtTestTest() {
    }
    
    @BeforeClass
    public static void setUpClass() {
    }
    
    @AfterClass
    public static void tearDownClass() {
    }
    
    @Before
    public void setUp() {
    }
    
    @After
    public void tearDown() {
    }


    /**
     * Test of operate method, of class UnpairedtTest.
     */
    @Test
    public void testOperate_doubleArrArr_doubleArrArr() {
        double [][] a= {
            {0.84038,-2.1384,2.908,-0.35385,0.02289,0.52006,-0.29375,-1.332,-1.3617,-0.19522},
            {-0.88803,-0.83959,0.82522,-0.82359,-0.262,-0.020028,-0.84793,-2.3299,0.45503,-0.21761},
            {0.10009,1.3546,1.379,-1.5771,-1.7502,-0.034771,-1.1201,-1.4491,-0.84871,-0.30311},
            {-0.54453,-1.0722,-1.0582,0.50797,-0.28565,-0.79816,2.526,0.33351,-0.33489,0.023046},
            {0.30352,0.96095,-0.46862,0.28198,-0.83137,1.0187,1.6555,0.39135,0.55278,0.05129},
            {-0.60033,0.12405,-0.27247,0.03348,-0.97921,-0.13322,0.30754,0.45168,1.0391,0.82606},
            {0.48997,1.4367,1.0984,-1.3337,-1.1564,-0.71453,-1.2571,-0.13028,-1.1176,1.527},
            {0.73936,-1.9609,-0.27787,1.1275,-0.53356,1.3514,-0.86547,0.18369,1.2607,0.46691},
            {1.7119,-0.1977,0.70154,0.35018,-2.0026,-0.22477,-0.17653,-0.47615,0.66014,-0.20971},
            {-0.19412,-1.2078,-2.0518,-0.29907,0.96423,-0.58903,0.79142,0.86202,-0.067866,0.62519}};
        double [][] b ={
            {0.53767,-1.3499,0.6715,0.8884,-0.10224,-0.86365,-1.0891,-0.6156,1.4193,-1.148},
            {1.8339,3.0349,-1.2075,-1.1471,-0.24145,0.077359,0.032557,0.74808,0.29158,0.10487},
            {-2.2588,0.7254,0.71724,-1.0689,0.31921,-1.2141,0.55253,-0.19242,0.19781,0.72225},
            {0.86217,-0.063055,1.6302,-0.8095,0.31286,-1.1135,1.1006,0.88861,1.5877,2.5855},
            {0.31877,0.71474,0.48889,-2.9443,-0.86488,-0.0068493,1.5442,-0.76485,-0.80447,-0.66689},
            {-1.3077,-0.20497,1.0347,1.4384,-0.030051,1.5326,0.085931,-1.4023,0.69662,0.18733},
            {-0.43359,-0.12414,0.72689,0.32519,-0.16488,-0.76967,-1.4916,-1.4224,0.83509,-0.082494},
            {0.34262,1.4897,-0.30344,-0.75493,0.62771,0.37138,-0.7423,0.48819,-0.24372,-1.933},
            {3.5784,1.409,0.29387,1.3703,1.0933,-0.22558,-1.0616,-0.17738,0.21567,-0.43897},
            {2.7694,1.4172,-0.78728,-1.7115,1.1093,1.1174,2.3505,-0.19605,-1.1658,-1.7947}};
        double expResult[][] = {
            {0.082511,0.32557,0.41576,0.79904,0.58747,0.7785,0.20504,0.036433,0.058579,0.23594},
            {0.24601,0.54875,0.46839,0.61661,0.38772,0.33067,0.11006,0.0025677,0.0088999,0.072751},
            {0.12508,0.15351,0.2924,0.36409,0.47913,0.28796,0.17583,0.034182,0.0032995,0.014366},
            {0.58497,0.31113,0.56782,0.37874,0.82254,0.48085,0.6346,0.3105,0.10839,0.11006},
            {0.33652,0.038203,0.31874,0.23888,0.6096,0.49318,0.80083,0.82326,0.59714,0.34499},
            {0.92441,0.72316,0.5344,0.21748,0.3111,0.33199,0.82636,0.84507,0.97266,0.82146},
            {0.54909,0.45652,0.19799,0.073575,0.1076,0.18277,0.73612,0.77697,0.96194,0.8964},
            {0.21221,0.26453,0.2122,0.1015,0.11761,0.20279,0.80273,0.67995,0.90221,0.88626},
            {0.0089179,0.018563,0.11251,0.27044,0.26505,0.10168,0.39217,0.75635,0.99347,0.99543},
            {0.015711,0.039779,0.1396,0.21269,0.13143,0.091924,0.32078,0.67762,0.97284,0.96136}};
        
           double[][] k={
            {1,1,1},
            {1,1,1},
            {1,1,1}
        };
        
        Kernel w = new Kernel(k);
        
        
        System.out.println("Unpaired t-Test filter\n Result:");

        UnpairedtTest operation = new UnpairedtTest(true);
        NonLinearSpatialFilter fil= new NonLinearSpatialFilter(operation);
        double[][] result = fil.doubleFilter(a, b,w);
        
        for (int i=0;i<result.length;i++) {
            for (int j = 0; j<result[0].length; j++) {
                assertEquals(result[i][j],expResult[i][j],0.0001);
                System.out.printf(" %.5f", result[i][j]);
            }
            System.out.println("");
        }
        System.out.println("\n Expected:");
       
        for (int i=0;i<result.length;i++) {
            for (int j = 0; j<result[0].length; j++) {
                System.out.printf(" %.5f", expResult[i][j]);
            }
            System.out.println("");
        }
        System.out.println("\n\n");
    }
    
}
